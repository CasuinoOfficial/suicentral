name: Check File Modification
on:
  pull_request:
    paths:
      - '**/*'

jobs:
  check-modified-files:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check for file modifications
      run: |
        # Define the files or directories that can be modified
        FILES=(
          "public/defi",
          "public/gaming",
          "public/infrastructure",
          "public/memecoins",
          "public/research",
          "public/social",
          "src/constants/index"
        )

        MAX_FILE_SIZE=$((2 * 1024 * 1024))

        MODIFIED_FILES=$(git diff --name-only main)

        UNAUTHORIZED_CHANGE=false

        IMAGE_EXTENSIONS="jpg|jpeg|png|gif|svg|webp"

        if [[ "$GITHUB_ACTOR" == "admin-username" ]]; then
          echo "ℹ️ Skipping checks for admin: $GITHUB_ACTOR"
          exit 0
        fi

        for modified_file in $MODIFIED_FILES; do
          is_allowed=false
        
          for allowed_file in "${FILES[@]}"; do
            if [[ "$modified_file" == "$allowed_file"* ]]; then
              is_allowed=true

              if [[ "$allowed_file" == public/* && ! "$modified_file" =~ \.($IMAGE_EXTENSIONS)$ ]]; then
                echo "❌ Error: Non-image file detected in public folder: $modified_file"
                UNAUTHORIZED_CHANGE=true
              fi

              if [[ "$modified_file" =~ \.($IMAGE_EXTENSIONS)$ ]]; then
                FILE_SIZE=$(stat -c%s "$modified_file")
                if (( FILE_SIZE > MAX_FILE_SIZE )); then
                  echo "❌ Error: File $modified_file exceeds the maximum allowed size of 2 MB."
                  UNAUTHORIZED_CHANGE=true
                fi
              fi
              
              break
            fi
          done
        
          if [ "$is_allowed" = false ]; then
            echo "❌ Error: Unauthorized change detected in file: $modified_file"
            UNAUTHORIZED_CHANGE=true
          fi
        done

        if [ "$UNAUTHORIZED_CHANGE" = true ]; then
          exit 1
        fi
        
        echo "✅ All changes are within the allowed files."
